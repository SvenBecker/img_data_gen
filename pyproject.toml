[tool.poetry]
name = "img_data_gen"
version = "0.1.0"
description = ""
authors = ["Sven Becker <Sven.Becker@mgm-tp.com>"]

[tool.poetry.dependencies]
python = "^3.9"
Pillow = "^9.2.0"
numpy = "^1.23.1"
tqdm = "^4.64.0"

[tool.poetry.dev-dependencies]
jupyter = "^1.0.0"
pytest = "^7.1.2"
mypy = "^0.961"
pylint = "^2.14.4"
pytest-cov = "^3.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.message_control]
# see https://pylint.pycqa.org/en/latest/technical_reference/features.html
# you can also disable certain warnings inline via comment, e.g. "# pylint disable=<number>"
disable = [
    "fixme", # otherwise we are not able to keep long term todos within the code
    "duplicate-code", # otherwise it will complain about notebooks are being too similar
    "missing-function-docstring",
    "missing-module-docstring",
    "missing-class-docstring",
    "wrong-import-order", # this will be covered by isort
    "logging-fstring-interpolation" # pylint wants to have % formatting in logging messages, but we decided on f-strings
]

[tool.pylint.format]
max-line-length = 120
max-module-lines = 1000
max-args = 7

[tool.mypy]
# see https://mypy.readthedocs.io/en/stable/config_file.html
# you can also disable certain warnings inline via "# type: ignore" comment
# Import discovery
mypy_path = "./img_data_gen"
files = ["./img_data_gen"]
namespace_packages = false
explicit_package_bases = false
ignore_missing_imports = true
follow_imports = "normal"
follow_imports_for_stubs = false
no_site_packages = false
# Platform setttings
python_version = "3.9"
# Disallow dynamic typing
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = true
disallow_subclassing_any = false
# Untyped definitions and calls
disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
# None and Optional handling
no_implicit_optional = true
strict_optional = true
# Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
# Suppressing errors
show_none_errors = true
ignore_errors = false
# Miscellaneous strictness flags
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = false
implicit_reexport = true
strict_equality = true
# Configuring error messages
show_error_context = false
show_column_numbers = false
show_error_codes = true
pretty = true

[tool.coverage.run]
omit = ['*/__init__.py', '*/__main__.py', '*/constants.py']

[tool.coverage.report]
# you can also omit lines for the coverage report via the "# pragma: no cover" comment
exclude_lines = [
    'pragma: no cover',
    '@abstract',
    '@overload',
    'raise AssertionError',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING',
    'except Exception as e:',
    'except Exception:',
    'pass'
]
